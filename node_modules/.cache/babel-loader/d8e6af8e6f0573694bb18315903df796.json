{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Builder = require(\"../Builder\");\n\nvar _typeLine = require(\"./type-line\");\n\nvar _d3Shape = require(\"d3-shape\");\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar createPoints = function createPoints(offset) {\n  var anchors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var diff = {\n    x: offset.x / (anchors + 1),\n    y: offset.y / (anchors + 1)\n  };\n  var p = [];\n  var i = 1;\n\n  for (; i <= anchors; i++) {\n    p.push([diff.x * i + i % 2 * 20, diff.y * i - i % 2 * 20]);\n  }\n\n  return p;\n};\n\nexports.default = function (_ref) {\n  var curve = _ref.curve,\n      points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      dx = _ref.dx,\n      dy = _ref.dy,\n      radius = _ref.radius,\n      outerRadius = _ref.outerRadius,\n      width = _ref.width,\n      height = _ref.height,\n      editMode = _ref.editMode;\n\n  if (!points || typeof points === \"number\") {\n    points = createPoints({\n      x: dx,\n      y: dy\n    }, points);\n  }\n\n  if (!curve) {\n    curve = _d3Shape.curveCatmullRom;\n  }\n\n  var handles = [];\n\n  if (editMode) {\n    handles = points.map(function (c, i) {\n      return {\n        index: i,\n        x: c[0],\n        y: c[1]\n      };\n    });\n  }\n\n  var data = (0, _typeLine.lineSetup)({\n    x: x,\n    y: y,\n    dx: dx,\n    dy: dy,\n    radius: radius,\n    outerRadius: outerRadius,\n    width: width,\n    height: height\n  });\n  data = [data[0]].concat(_toConsumableArray(points), [data[1]]);\n  var components = [(0, _Builder.lineBuilder)({\n    data: data,\n    curve: curve,\n    className: \"connector\"\n  })];\n  return {\n    components: components,\n    handles: handles,\n    points: points\n  };\n};","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/node_modules/viz-annotation/lib/Connector/type-curve.js"],"names":["Object","defineProperty","exports","value","_Builder","require","_typeLine","_d3Shape","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","createPoints","offset","anchors","arguments","undefined","diff","x","y","p","push","default","_ref","curve","points","dx","dy","radius","outerRadius","width","height","editMode","curveCatmullRom","handles","map","c","index","data","lineSetup","concat","components","lineBuilder","className"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Builder = require(\"../Builder\");\n\nvar _typeLine = require(\"./type-line\");\n\nvar _d3Shape = require(\"d3-shape\");\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar createPoints = function createPoints(offset) {\n  var anchors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  var diff = { x: offset.x / (anchors + 1), y: offset.y / (anchors + 1) };\n  var p = [];\n\n  var i = 1;\n  for (; i <= anchors; i++) {\n    p.push([diff.x * i + i % 2 * 20, diff.y * i - i % 2 * 20]);\n  }\n  return p;\n};\n\nexports.default = function (_ref) {\n  var curve = _ref.curve,\n      points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      dx = _ref.dx,\n      dy = _ref.dy,\n      radius = _ref.radius,\n      outerRadius = _ref.outerRadius,\n      width = _ref.width,\n      height = _ref.height,\n      editMode = _ref.editMode;\n\n  if (!points || typeof points === \"number\") {\n    points = createPoints({ x: dx, y: dy }, points);\n  }\n  if (!curve) {\n    curve = _d3Shape.curveCatmullRom;\n  }\n\n  var handles = [];\n\n  if (editMode) {\n    handles = points.map(function (c, i) {\n      return { index: i, x: c[0], y: c[1] };\n    });\n  }\n\n  var data = (0, _typeLine.lineSetup)({ x: x, y: y, dx: dx, dy: dy, radius: radius, outerRadius: outerRadius, width: width, height: height });\n  data = [data[0]].concat(_toConsumableArray(points), [data[1]]);\n  var components = [(0, _Builder.lineBuilder)({ data: data, curve: curve, className: \"connector\" })];\n\n  return { components: components, handles: handles, points: points };\n};"]},"metadata":{},"sourceType":"script"}