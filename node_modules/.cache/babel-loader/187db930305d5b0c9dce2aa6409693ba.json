{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranava/Desktop/network_visualiser/src/MapChart.js\";\nimport React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport { ColorBar } from \"react-color-bar\";\nimport { AnnotationLabel } from \"react-annotation\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst data = [{\n  value: 300,\n  color: '#21bbce',\n  legendLabel: 'interest',\n  legendValue: 300,\n  tooltip: 'interest is $300'\n}, {\n  value: 200,\n  color: '#4bc97d',\n  legendLabel: 'tax',\n  legendValue: 200,\n  tooltip: 'tax is $200'\n}, {\n  value: 100,\n  color: '#eb5be1',\n  legendLabel: 'insurance',\n  legendValue: 100,\n  tooltip: 'insurance is $100'\n}];\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: [/*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo,\n        fill: \"#DDD\",\n        stroke: \"#000\"\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        coordinates: data.coordinate,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          r: 8,\n          fill: \"#F53\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(Annotation, {\n        subject: data.coordinate,\n        dx: 0,\n        dy: 0,\n        connectorProps: {\n          stroke: \"#000000\",\n          strokeWidth: 1,\n          strokeLinecap: \"round\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"-8\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"middle\",\n          fill: \"#000000\",\n          children: \"Data Usage: \" + data.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this) // <AnnotationLabel\n      //     x={data.coordinate[0]}\n      //     y={data.coordinate[1]}\n      //     dy={400}\n      //     dx={500}\n      //     color={\"#9610ff\"}\n      //     className=\"show-bg\" \n      //     editMode={true}\n      //     note={{\"title\":\"Annotations :)\",\n      //         \"label\":\"Longer text to show text wrapping\",\n      //         \"align\":\"middle\",\n      //         \"orientation\":\"topBottom\",\n      //         \"bgPadding\":20,\n      //         \"padding\":15,\n      //         \"titleColor\":\"#59039c\"}}\n      // />\n      ;\n    }), /*#__PURE__*/_jsxDEV(ColorBar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/src/MapChart.js"],"names":["React","networkData","ComposableMap","Geographies","Geography","Marker","Annotation","ColorBar","AnnotationLabel","geoUrl","data","value","color","legendLabel","legendValue","tooltip","MapChart","geographies","map","geo","rsmKey","key","coordinate","stroke","strokeWidth","strokeLinecap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,MAAM,GACV,wGADF;AAGE,MAAMC,IAAI,GAAG,CACX;AACIC,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,WAAW,EAAE,UAHjB;AAIIC,EAAAA,WAAW,EAAE,GAJjB;AAKIC,EAAAA,OAAO,EAAE;AALb,CADW,EAOR;AACCJ,EAAAA,KAAK,EAAE,GADR;AAECC,EAAAA,KAAK,EAAE,SAFR;AAGCC,EAAAA,WAAW,EAAE,KAHd;AAICC,EAAAA,WAAW,EAAE,GAJd;AAKCC,EAAAA,OAAO,EAAE;AALV,CAPQ,EAaR;AACCJ,EAAAA,KAAK,EAAE,GADR;AAECC,EAAAA,KAAK,EAAE,SAFR;AAGCC,EAAAA,WAAW,EAAE,WAHd;AAICC,EAAAA,WAAW,EAAE,GAJd;AAKCC,EAAAA,OAAO,EAAE;AALV,CAbQ,CAAb;;AAsBF,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACI,QAAC,aAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEP,MAAxB;AAAA,gBACC,CAAC;AAACQ,QAAAA;AAAD,OAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,QAAA,SAAS,EAAEA,GAFf;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,MAAM,EAAC;AAJX,SACSA,GAAG,CAACC,MADb;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAaGnB,WAAW,CAACiB,GAAZ,CAAgB,CAACR,IAAD,EAAOW,GAAP,KAAe;AAC5B,0BACA,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEX,IAAI,CAACY,UAA1B;AAAA,+BACQ;AAAQ,UAAA,CAAC,EAAE,CAAX;AAAc,UAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cADA;AAMH,KAPA,CAbH,EAsBGrB,WAAW,CAACiB,GAAZ,CAAgB,CAACR,IAAD,EAAOW,GAAP,KAAe;AAC5B,0BACI,QAAC,UAAD;AACI,QAAA,OAAO,EAAEX,IAAI,CAACY,UADlB;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,EAAE,EAAE,CAHR;AAII,QAAA,cAAc,EAAE;AAChBC,UAAAA,MAAM,EAAE,SADQ;AAEhBC,UAAAA,WAAW,EAAE,CAFG;AAGhBC,UAAAA,aAAa,EAAE;AAHC,SAJpB;AAAA,+BAUQ;AAAM,UAAA,CAAC,EAAC,IAAR;AAAa,UAAA,UAAU,EAAC,QAAxB;AAAiC,UAAA,iBAAiB,EAAC,QAAnD;AAA4D,UAAA,IAAI,EAAC,SAAjE;AAAA,oBACC,iBAAef,IAAI,CAACA;AADrB;AAAA;AAAA;AAAA;AAAA;AAVR;AAAA;AAAA;AAAA;AAAA,cADJ,CAgBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BJ;AAiCH,KAlCA,CAtBH,eA0DC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YA1DD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8DD,CA/DD;;KAAMM,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\nimport { ColorBar } from \"react-color-bar\";\nimport { AnnotationLabel } from \"react-annotation\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n  const data = [\n    {\n        value: 300,\n        color: '#21bbce',\n        legendLabel: 'interest',\n        legendValue: 300,\n        tooltip: 'interest is $300',\n    }, {\n        value: 200,\n        color: '#4bc97d',\n        legendLabel: 'tax',\n        legendValue: 200,\n        tooltip: 'tax is $200',\n    }, {\n        value: 100,\n        color: '#eb5be1',\n        legendLabel: 'insurance',\n        legendValue: 100,\n        tooltip: 'insurance is $100',\n    },\n];\n\nconst MapChart = () => {\n  return (\n      <ComposableMap>\n        <Geographies geography={geoUrl}>\n        {({geographies}) => \n            geographies.map(geo => (\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo}\n                    fill=\"#DDD\"\n                    stroke=\"#000\" \n                />\n            ))\n        }\n        </Geographies>\n        {networkData.map((data, key) => {\n            return (\n            <Marker coordinates={data.coordinate}>\n                    <circle r={8} fill=\"#F53\" />\n             \n            </Marker>\n            );\n        })}\n        \n        {networkData.map((data, key) => {\n            return (\n                <Annotation\n                    subject={data.coordinate}\n                    dx={0}\n                    dy={0}\n                    connectorProps={{\n                    stroke: \"#000000\",\n                    strokeWidth: 1,\n                    strokeLinecap: \"round\"\n                    }}\n                >\n                        <text x=\"-8\" textAnchor=\"middle\" alignmentBaseline=\"middle\" fill=\"#000000\">\n                        {\"Data Usage: \"+data.data}\n                        </text>\n                    \n                </Annotation>\n                // <AnnotationLabel\n                //     x={data.coordinate[0]}\n                //     y={data.coordinate[1]}\n                //     dy={400}\n                //     dx={500}\n                //     color={\"#9610ff\"}\n                //     className=\"show-bg\" \n                //     editMode={true}\n                //     note={{\"title\":\"Annotations :)\",\n                //         \"label\":\"Longer text to show text wrapping\",\n                //         \"align\":\"middle\",\n                //         \"orientation\":\"topBottom\",\n                //         \"bgPadding\":20,\n                //         \"padding\":15,\n                //         \"titleColor\":\"#59039c\"}}\n                // />\n            );\n        })}\n       \n       <ColorBar data={data}/>\n      </ComposableMap>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}