{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranava/Desktop/network_visualiser/src/MapChart.js\";\nimport React, { memo } from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport '/home/pranava/Desktop/network_visualiser/src/ MapChart.css';\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport { AnnotationLabel } from \"react-annotation\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"; // function annotFunction(e){\n// const labels = networkData.map((data, key) => {\n//     return (\n//         <Annotation\n//             key = {key}\n//             subject={data.coordinate}\n//             dx={0}\n//             dy={0}\n//             connectorProps={{\n//             stroke: \"#000000\",\n//             strokeWidth: 1,\n//             strokeLinecap: \"round\"\n//             }}\n//         >\n//                 <text x=\"-8\" textAnchor=\"middle\" alignmentBaseline=\"middle\" fill=\"#000000\">\n//                     {\"Data Usage: \"+data.data}\n//                 </text>\n//         </Annotation>\n//         );\n//     });\n//     return ({labels});\n// };\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: [/*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo,\n        fill: \"#DDD\"\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      coordinates: [8.5, 47.3],\n      onMouseEnter: () => {\n        setTooltipContent(\"Map tooltip\");\n      },\n      onMouseLeave: () => {\n        setTooltipContent(\"\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 2,\n        cy: 2,\n        r: 10,\n        style: {\n          stroke: \"#FF5722\",\n          strokeWidth: 3,\n          opacity: 0.9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(Annotation, {\n        subject: data.coordinate,\n        dx: 0,\n        dy: 0,\n        connectorProps: {\n          stroke: \"#000000\",\n          strokeWidth: 1,\n          strokeLinecap: \"round\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          textAnchor: \"middle\",\n          children: \"Data Usage: \" + data.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/src/MapChart.js"],"names":["React","memo","networkData","ComposableMap","Geographies","Geography","Marker","Annotation","AnnotationLabel","geoUrl","MapChart","setTooltipContent","geographies","map","geo","rsmKey","stroke","strokeWidth","opacity","data","key","coordinate","strokeLinecap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAO,4DAAP;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAQA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,MAAM,GACV,wGADF,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAA4B;AAC3C,sBACI,QAAC,aAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEF,MAAxB;AAAA,gBACC,CAAC;AAACG,QAAAA;AAAD,OAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,QAAA,SAAS,EAAEA,GAFf;AAGI,QAAA,IAAI,EAAC;AAHT,SACSA,GAAG,CAACC,MADb;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,MAAD;AACE,MAAA,WAAW,EAAE,CAAC,GAAD,EAAM,IAAN,CADf;AAEE,MAAA,YAAY,EAAE,MAAM;AAClBJ,QAAAA,iBAAiB,CAAC,aAAD,CAAjB;AACD,OAJH;AAKE,MAAA,YAAY,EAAE,MAAM;AAClBA,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,OAPH;AAAA,6BASE;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAGE,QAAA,CAAC,EAAE,EAHL;AAIE,QAAA,KAAK,EAAE;AACLK,UAAAA,MAAM,EAAE,SADH;AAELC,UAAAA,WAAW,EAAE,CAFR;AAGLC,UAAAA,OAAO,EAAE;AAHJ;AAJT;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAdF,EAmCGhB,WAAW,CAACW,GAAZ,CAAgB,CAACM,IAAD,EAAOC,GAAP,KAAe;AACxB,0BACI,QAAC,UAAD;AAEI,QAAA,OAAO,EAAED,IAAI,CAACE,UAFlB;AAGI,QAAA,EAAE,EAAE,CAHR;AAII,QAAA,EAAE,EAAE,CAJR;AAKI,QAAA,cAAc,EAAE;AAChBL,UAAAA,MAAM,EAAE,SADQ;AAEhBC,UAAAA,WAAW,EAAE,CAFG;AAGhBK,UAAAA,aAAa,EAAE;AAHC,SALpB;AAAA,+BAWA;AAAG,UAAA,UAAU,EAAC,QAAd;AAAA,oBACC,iBAAeH,IAAI,CAACA;AADrB;AAAA;AAAA;AAAA;AAAA;AAXA,SACWC,GADX;AAAA;AAAA;AAAA;AAAA,cADJ;AAoBP,KArBA,CAnCH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DD,CA7DD;;KAAMV,Q;AA+DN,kCAAeT,IAAI,CAACS,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport '/home/pranava/Desktop/network_visualiser/src/ MapChart.css'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\n\nimport { AnnotationLabel } from \"react-annotation\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n// function annotFunction(e){\n// const labels = networkData.map((data, key) => {\n//     return (\n//         <Annotation\n//             key = {key}\n//             subject={data.coordinate}\n//             dx={0}\n//             dy={0}\n//             connectorProps={{\n//             stroke: \"#000000\",\n//             strokeWidth: 1,\n//             strokeLinecap: \"round\"\n//             }}\n//         >\n//                 <text x=\"-8\" textAnchor=\"middle\" alignmentBaseline=\"middle\" fill=\"#000000\">\n//                     {\"Data Usage: \"+data.data}\n//                 </text>\n\n//         </Annotation>\n//         );\n//     });\n    \n//     return ({labels});\n// };\n\nconst MapChart = ( { setTooltipContent }) => {\n  return (\n      <ComposableMap>\n        <Geographies geography={geoUrl}>\n        {({geographies}) => \n            geographies.map(geo => (\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo}\n                    fill=\"#DDD\"\n                    \n                />\n            ))\n        }\n        </Geographies>\n\n        <Marker\n          coordinates={[8.5, 47.3]}\n          onMouseEnter={() => {\n            setTooltipContent(\"Map tooltip\");\n          }}\n          onMouseLeave={() => {\n            setTooltipContent(\"\");\n          }}\n        >\n          <circle\n            cx={2}\n            cy={2}\n            r={10}\n            style={{\n              stroke: \"#FF5722\",\n              strokeWidth: 3,\n              opacity: 0.9\n            }}\n          />\n        </Marker>\n       \n        {networkData.map((data, key) => {\n                return (\n                    <Annotation\n                        key = {key}\n                        subject={data.coordinate}\n                        dx={0}\n                        dy={0}\n                        connectorProps={{\n                        stroke: \"#000000\",\n                        strokeWidth: 1,\n                        strokeLinecap: \"round\"\n                        }}\n                    >\n                    <p textAnchor=\"middle\">\n                    {\"Data Usage: \"+data.data}\n                    </p>\n                  \n                                          \n            \n                    </Annotation>\n                    );\n        })} \n      </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}