{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arcBuilder = exports.pathBuilder = exports.lineBuilder = undefined;\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar lineBuilder = exports.lineBuilder = function lineBuilder(_ref) {\n  var data = _ref.data,\n      _ref$curve = _ref.curve,\n      curve = _ref$curve === undefined ? _d3Shape.curveLinear : _ref$curve,\n      canvasContext = _ref.canvasContext,\n      className = _ref.className,\n      classID = _ref.classID;\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n    builder.pathMethods = lineGen;\n  } else {\n    builder.attrs = {\n      d: lineGen(data)\n    };\n  }\n\n  return builder;\n};\n\nvar pathBuilder = exports.pathBuilder = function pathBuilder(_ref2) {\n  var d = _ref2.d,\n      _ref2$curve = _ref2.curve,\n      curve = _ref2$curve === undefined ? _d3Shape.curveLinear : _ref2$curve,\n      canvasContext = _ref2.canvasContext,\n      className = _ref2.className,\n      classID = _ref2.classID;\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: d\n    };\n  }\n\n  return builder;\n};\n\nvar arcBuilder = exports.arcBuilder = function arcBuilder(_ref3) {\n  var data = _ref3.data,\n      canvasContext = _ref3.canvasContext,\n      className = _ref3.className,\n      classID = _ref3.classID;\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n  var arcShape = (0, _d3Shape.arc)().innerRadius(data.innerRadius || 0).outerRadius(data.outerRadius || data.radius || 2).startAngle(data.startAngle || 0).endAngle(data.endAngle || 2 * Math.PI);\n\n  if (canvasContext) {\n    arcShape.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: arcShape()\n    };\n  }\n\n  return builder;\n};","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/node_modules/viz-annotation/lib/Builder.js"],"names":["Object","defineProperty","exports","value","arcBuilder","pathBuilder","lineBuilder","undefined","_d3Shape","require","_ref","data","_ref$curve","curve","curveLinear","canvasContext","className","classID","lineGen","line","builder","type","context","pathMethods","attrs","d","_ref2","_ref2$curve","_ref3","arcShape","arc","innerRadius","outerRadius","radius","startAngle","endAngle","Math","PI"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arcBuilder = exports.pathBuilder = exports.lineBuilder = undefined;\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar lineBuilder = exports.lineBuilder = function lineBuilder(_ref) {\n  var data = _ref.data,\n      _ref$curve = _ref.curve,\n      curve = _ref$curve === undefined ? _d3Shape.curveLinear : _ref$curve,\n      canvasContext = _ref.canvasContext,\n      className = _ref.className,\n      classID = _ref.classID;\n\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n    builder.pathMethods = lineGen;\n  } else {\n    builder.attrs = {\n      d: lineGen(data)\n    };\n  }\n\n  return builder;\n};\n\nvar pathBuilder = exports.pathBuilder = function pathBuilder(_ref2) {\n  var d = _ref2.d,\n      _ref2$curve = _ref2.curve,\n      curve = _ref2$curve === undefined ? _d3Shape.curveLinear : _ref2$curve,\n      canvasContext = _ref2.canvasContext,\n      className = _ref2.className,\n      classID = _ref2.classID;\n\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: d\n    };\n  }\n\n  return builder;\n};\n\nvar arcBuilder = exports.arcBuilder = function arcBuilder(_ref3) {\n  var data = _ref3.data,\n      canvasContext = _ref3.canvasContext,\n      className = _ref3.className,\n      classID = _ref3.classID;\n\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n\n  var arcShape = (0, _d3Shape.arc)().innerRadius(data.innerRadius || 0).outerRadius(data.outerRadius || data.radius || 2).startAngle(data.startAngle || 0).endAngle(data.endAngle || 2 * Math.PI);\n\n  if (canvasContext) {\n    arcShape.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: arcShape()\n    };\n  }\n\n  return builder;\n};"]},"metadata":{},"sourceType":"script"}