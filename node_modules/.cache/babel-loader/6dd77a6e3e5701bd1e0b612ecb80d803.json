{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranava/Desktop/network_visualiser/src/MapChart.js\";\nimport React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport { AnnotationLabel } from \"react-annotation\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: [/*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo,\n        fill: \"#DDD\",\n        stroke: \"#000\"\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: data.coordinate,\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            r: 8,\n            fill: \"#F53\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/src/MapChart.js"],"names":["React","networkData","ComposableMap","Geographies","Geography","Marker","Annotation","AnnotationLabel","geoUrl","MapChart","geographies","map","geo","rsmKey","data","key","coordinate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAQA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,MAAM,GACV,wGADF;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACI,QAAC,aAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAED,MAAxB;AAAA,gBACC,CAAC;AAACE,QAAAA;AAAD,OAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,QAAA,SAAS,EAAEA,GAFf;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,MAAM,EAAC;AAJX,SACSA,GAAG,CAACC,MADb;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAaGZ,WAAW,CAACU,GAAZ,CAAgB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC5B,0BACI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAED,IAAI,CAACE,UAA1B;AAAA,iCACQ;AAAQ,YAAA,CAAC,EAAE,CAAX;AAAc,YAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiED,CAlED;;KAAMP,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\n\nimport { AnnotationLabel } from \"react-annotation\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = () => {\n  return (\n      <ComposableMap>\n        <Geographies geography={geoUrl}>\n        {({geographies}) => \n            geographies.map(geo => (\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo}\n                    fill=\"#DDD\"\n                    stroke=\"#000\" \n                />\n            ))\n        }\n        </Geographies>\n        {networkData.map((data, key) => {\n            return (\n                <div>\n                    <Marker coordinates={data.coordinate}>\n                            <circle r={8} fill=\"#F53\" />\n                    </Marker>\n                  \n                </div>\n\n            );\n        })}\n        \n        {/* {networkData.map((data, key) => {\n            return (\n                <Annotation\n                    subject={data.coordinate}\n                    dx={0}\n                    dy={0}\n                    connectorProps={{\n                    stroke: \"#000000\",\n                    strokeWidth: 1,\n                    strokeLinecap: \"round\"\n                    }}\n                >\n                        <text x=\"-8\" textAnchor=\"middle\" alignmentBaseline=\"middle\" fill=\"#000000\">\n                        {\"Data Usage: \"+data.data}\n                        </text>\n                    \n                </Annotation>\n                // <AnnotationLabel\n                //     x={data.coordinate[0]}\n                //     y={data.coordinate[1]}\n                //     dy={400}\n                //     dx={500}\n                //     color={\"#9610ff\"}\n                //     className=\"show-bg\" \n                //     editMode={true}\n                //     note={{\"title\":\"Annotations :)\",\n                //         \"label\":\"Longer text to show text wrapping\",\n                //         \"align\":\"middle\",\n                //         \"orientation\":\"topBottom\",\n                //         \"bgPadding\":20,\n                //         \"padding\":15,\n                //         \"titleColor\":\"#59039c\"}}\n                // />\n            );\n        })} */}\n       \n        \n      </ComposableMap>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}