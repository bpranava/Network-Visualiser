{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranava/Desktop/network_visualiser/src/MapChart.js\";\nimport React, { memo } from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport \"./MapChart.css\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Marker } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      center: [0, 0],\n      children: [/*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geography => /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geography,\n          fill: \"#DDD\"\n        }, geography.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), networkData.map((data, key) => {\n        var radius;\n        var color = \"#e6f7ff\";\n        {\n          if (data.data < 100) {\n            radius = 7;\n          } else if (data.data >= 100 && data.data < 300) {\n            radius = 10;\n            color = \"#80ccff\";\n          } else if (data.data >= 300 && data.data < 500) {\n            radius = 17;\n            color = \"#99c2ff\";\n          } else if (data.data > 500) {\n            radius = 20;\n            color = \"#8080ff\";\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: data.coordinate,\n          onMouseEnter: () => {\n            setTooltipContent(\"Data Usage: \" + data.data);\n          },\n          onMouseLeave: () => {\n            setTooltipContent(\"\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: 2,\n            cy: 2,\n            r: radius,\n            fill: color,\n            style: {\n              strokeWidth: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/src/MapChart.js"],"names":["React","memo","networkData","ComposableMap","ZoomableGroup","Geographies","Geography","Marker","geoUrl","MapChart","setTooltipContent","geographies","map","geography","rsmKey","data","key","radius","color","coordinate","strokeWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAO,gBAAP;AAEA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,MALF,QAMO,mBANP;AAQA,MAAMC,MAAM,GACV,wGADF;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAC1C,sBACE,QAAC,aAAD;AAAe,gBAAS,EAAxB;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAvB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEF,MAAxB;AAAA,kBACG,CAAC;AAAEG,UAAAA;AAAF,SAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,SAAS,iBACvB,QAAC,SAAD;AAEE,UAAA,SAAS,EAAEA,SAFb;AAGE,UAAA,IAAI,EAAC;AAHP,WACOA,SAAS,CAACC,MADjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,EAaGZ,WAAW,CAACU,GAAZ,CAAgB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC9B,YAAIC,MAAJ;AACA,YAAIC,KAAK,GAAG,SAAZ;AAEE;AACE,cAAGH,IAAI,CAACA,IAAL,GAAU,GAAb,EAAiB;AACfE,YAAAA,MAAM,GAAG,CAAT;AACD,WAFD,MAEM,IAAGF,IAAI,CAACA,IAAL,IAAW,GAAX,IAAkBA,IAAI,CAACA,IAAL,GAAU,GAA/B,EAAmC;AACvCE,YAAAA,MAAM,GAAG,EAAT;AACAC,YAAAA,KAAK,GAAG,SAAR;AACD,WAHK,MAGC,IAAGH,IAAI,CAACA,IAAL,IAAW,GAAX,IAAkBA,IAAI,CAACA,IAAL,GAAU,GAA/B,EAAmC;AACxCE,YAAAA,MAAM,GAAG,EAAT;AACAC,YAAAA,KAAK,GAAG,SAAR;AAED,WAJM,MAID,IAAGH,IAAI,CAACA,IAAL,GAAU,GAAb,EAAiB;AACrBE,YAAAA,MAAM,GAAG,EAAT;AACAC,YAAAA,KAAK,GAAG,SAAR;AACD;AACF;AAED,4BACE,QAAC,MAAD;AAEA,UAAA,WAAW,EAAEH,IAAI,CAACI,UAFlB;AAGA,UAAA,YAAY,EAAE,MAAM;AAClBT,YAAAA,iBAAiB,CAAC,iBAAgBK,IAAI,CAACA,IAAtB,CAAjB;AACD,WALD;AAMA,UAAA,YAAY,EAAE,MAAM;AAClBL,YAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,WARD;AAAA,iCAUA;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,EAAE,EAAE,CAFN;AAGE,YAAA,CAAC,EAAEO,MAHL;AAIE,YAAA,IAAI,EAAIC,KAJV;AAKE,YAAA,KAAK,EAAE;AACLE,cAAAA,WAAW,EAAE;AADR;AALT;AAAA;AAAA;AAAA;AAAA;AAVA,WACOJ,GADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBH,OA1CA,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CA/DD;;KAAMP,Q;AAiEN,kCAAeR,IAAI,CAACQ,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport \"./MapChart.css\";\n\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <ComposableMap data-tip=\"\">\n      <ZoomableGroup center={[0, 0]}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geography => (\n              <Geography \n                key={geography.rsmKey} \n                geography={geography}\n                fill=\"#DDD\"\n              />\n            ))\n          }\n        </Geographies>\n\n        {networkData.map((data, key) => {\n          var radius;\n          var color = \"#e6f7ff\";\n\n            {\n              if(data.data<100){\n                radius = 7\n              }else if(data.data>=100 && data.data<300){\n                radius = 10\n                color = \"#80ccff\";\n              } else if(data.data>=300 && data.data<500){\n                radius = 17\n                color = \"#99c2ff\"\n\n              }else if(data.data>500){\n                radius = 20\n                color = \"#8080ff\"\n              }\n            }\n\n            return (\n              <Marker\n              key = {key}\n              coordinates={data.coordinate}\n              onMouseEnter={() => {\n                setTooltipContent(\"Data Usage: \"+ data.data);\n              }}\n              onMouseLeave={() => {\n                setTooltipContent(\"\");\n              }}\n            >\n              <circle\n                cx={2}\n                cy={2}\n                r={radius}\n                fill = {color}\n                style={{\n                  strokeWidth: 1,\n                }}\n              />\n            </Marker>\n            );\n        })}\n        \n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}