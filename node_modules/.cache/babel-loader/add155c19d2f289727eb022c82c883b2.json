{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranava/Desktop/network_visualiser/src/MapChart.js\";\nimport React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport { AnnotationLabel } from \"react-annotation\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: [/*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo,\n        fill: \"#DDD\",\n        stroke: \"#000\"\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        coordinates: data.coordinate,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          r: 8,\n          fill: \"#F53\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    }), networkData.map((data, key) => {\n      return /*#__PURE__*/_jsxDEV(AnnotationLabel, {\n        x: data.coordinate[0],\n        y: data.coordinate[1],\n        dy: data.coordinate[0] - 8,\n        dx: data.coordinate[1] - 8,\n        color: \"#9610ff\",\n        className: \"show-bg\",\n        editMode: true,\n        note: {\n          \"title\": \"Annotations :)\",\n          \"label\": \"Longer text to show text wrapping\",\n          \"align\": \"middle\",\n          \"orientation\": \"topBottom\",\n          \"bgPadding\": 20,\n          \"padding\": 15,\n          \"titleColor\": \"#59039c\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/pranava/Desktop/network_visualiser/src/MapChart.js"],"names":["React","networkData","ComposableMap","Geographies","Geography","Marker","AnnotationLabel","geoUrl","MapChart","geographies","map","geo","rsmKey","data","key","coordinate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,MAAM,GACV,wGADF;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACI,QAAC,aAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAED,MAAxB;AAAA,gBACC,CAAC;AAACE,QAAAA;AAAD,OAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,QAAA,SAAS,EAAEA,GAFf;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,MAAM,EAAC;AAJX,SACSA,GAAG,CAACC,MADb;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAaGX,WAAW,CAACS,GAAZ,CAAgB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC5B,0BACA,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAED,IAAI,CAACE,UAA1B;AAAA,+BACI;AAAQ,UAAA,CAAC,EAAE,CAAX;AAAc,UAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA;AAKH,KANA,CAbH,EAqBGd,WAAW,CAACS,GAAZ,CAAgB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC5B,0BACI,QAAC,eAAD;AACI,QAAA,CAAC,EAAED,IAAI,CAACE,UAAL,CAAgB,CAAhB,CADP;AAEI,QAAA,CAAC,EAAEF,IAAI,CAACE,UAAL,CAAgB,CAAhB,CAFP;AAGI,QAAA,EAAE,EAAEF,IAAI,CAACE,UAAL,CAAgB,CAAhB,IAAmB,CAH3B;AAII,QAAA,EAAE,EAAEF,IAAI,CAACE,UAAL,CAAgB,CAAhB,IAAmB,CAJ3B;AAKI,QAAA,KAAK,EAAE,SALX;AAMI,QAAA,SAAS,EAAC,SANd;AAOI,QAAA,QAAQ,EAAE,IAPd;AAQI,QAAA,IAAI,EAAE;AAAC,mBAAQ,gBAAT;AACF,mBAAQ,mCADN;AAEF,mBAAQ,QAFN;AAGF,yBAAc,WAHZ;AAIF,uBAAY,EAJV;AAKF,qBAAU,EALR;AAMF,wBAAa;AANX;AARV;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAnBA,CArBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CD,CA/CD;;KAAMP,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\nimport { AnnotationLabel } from \"react-annotation\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = () => {\n  return (\n      <ComposableMap>\n        <Geographies geography={geoUrl}>\n        {({geographies}) => \n            geographies.map(geo => (\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo}\n                    fill=\"#DDD\"\n                    stroke=\"#000\" \n                />\n            ))\n        }\n        </Geographies>\n        {networkData.map((data, key) => {\n            return (\n            <Marker coordinates={data.coordinate}>\n                <circle r={8} fill=\"#F53\" />\n            </Marker>\n            );\n        })}\n        \n        {networkData.map((data, key) => {\n            return (\n                <AnnotationLabel\n                    x={data.coordinate[0]}\n                    y={data.coordinate[1]}\n                    dy={data.coordinate[0]-8}\n                    dx={data.coordinate[1]-8}\n                    color={\"#9610ff\"}\n                    className=\"show-bg\" \n                    editMode={true}\n                    note={{\"title\":\"Annotations :)\",\n                        \"label\":\"Longer text to show text wrapping\",\n                        \"align\":\"middle\",\n                        \"orientation\":\"topBottom\",\n                        \"bgPadding\":20,\n                        \"padding\":15,\n                        \"titleColor\":\"#59039c\"}}\n                />\n            );\n        })}\n       \n        \n      </ComposableMap>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}