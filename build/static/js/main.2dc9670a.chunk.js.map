{"version":3,"sources":["component/data/data.js","MapChart.js","App.js","Bar.js","reportWebVitals.js","index.js"],"names":["networkData","MapChart","setTooltipContent","data-tip","center","geography","geographies","map","fill","stroke","rsmKey","data","key","radius","fillcolor","strokeColor","coordinates","coordinate","onMouseEnter","region","onMouseLeave","r","memo","App","useState","content","setContent","multiline","Bar","title","value","color","legendLabel","legendValue","tooltip","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dc9670a.chunk.js","sourcesContent":["export const networkData = [{\n\t\"id\": 1,\n\t\"region\": \"US\",\n\t\"coordinate\":[-74.0060, 40.7128],\n\t\"data\": 50\n},\n{\n\t\"id\": 2,\n\t\"region\": \"Paris\",\n\t\"coordinate\":[2.3522, 48.8566],\n\t\"data\": 360\n\n},{\n\t\"id\": 3,\n\t\"region\": \"Bangalore\",\n\t\"coordinate\":[77.5946,12.9716],\n\t\"data\": 290\n},{\n\t\"id\": 4,\n\t\"region\": \"Delhi\",\n\t\"coordinate\":[77.1025,28.7041],\n\t\"data\": 80\n\n},{\n\t\"id\": 5,\n\t\"region\": \"Moscow\",\n\t\"coordinate\": [37.6173,55.7558],\n\t\"data\": 1000\n},{\n\t\"id\":6,\n\t\"region\": \"Tokyo\",\n\t\"coordinate\":[139.6503,35.6762],\n\t\"data\": 450\n},{\n\t\"id\":7,\n\t\"region\": \"Peru\",\n\t\"coordinate\":[-75.0152,-9.1900],\n\t\"data\": 200\n},{\n\t\"id\":8,\n\t\"region\": \"Cape Town\",\n\t\"coordinate\":[18.4241,-33.9249],\n\t\"data\": 150\n},{\n\t\"id\":9,\n\t\"region\": \"San Francisco\",\n\t\"coordinate\":[-122.4194,37.7749],\n\t\"data\": 550\n},{\n\t\"id\":10,\n\t\"region\": \"Rio de Janeiro\",\n\t\"coordinate\":[-43.1729, -22.9068],\n\t\"data\": 1200\n},];\n\n","import React, { memo } from \"react\";\nimport { networkData } from \"./component/data/data\";\nimport \"./MapChart.css\";\n\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <ComposableMap data-tip=''>\n      <ZoomableGroup center={[0, 0]}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geography => (\n              <Geography \n                key={geography.rsmKey} \n                geography={geography}\n                fill=\"#DDD\"\n                stroke=\"#FFF\"\n              />\n            ))\n          }\n        </Geographies>\n\n        {networkData.map((data, key) => {\n          var radius;\n          var fillcolor = \"#bbe0f9\";\n          var strokeColor = \"#6dc0fd\"\n\n            {\n              if(data.data<100){\n                radius = 7;\n              }else if(data.data>=100 && data.data<300){\n                radius = 10;\n                fillcolor = \"#99c2ff\";\n                strokeColor = \"#5b92fe\";\n              } else if(data.data>=300 && data.data<500){\n                radius = 14;\n                fillcolor = \"#9cb3e3\";\n                strokeColor = \"#6154cb\";\n\n              }else if(data.data>500){\n                radius = 20;\n                fillcolor = \"#8080ff\";\n                strokeColor = \"#000099\";\n\n              }\n            }\n\n            return (\n              <Marker\n              key = {key}\n              coordinates={data.coordinate}\n              onMouseEnter={() => {\n                setTooltipContent(\"Location: \"+ data.region + \" |  Data Usage: \"+ data.data);\n              }}\n              onMouseLeave={() => {\n                setTooltipContent(\"\");\n              }}\n            >\n              <circle\n                r={radius}\n                fill = {fillcolor}\n                stroke = {strokeColor}            \n              />\n            </Marker>\n            );\n        })}\n        \n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport './App.css';\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip multiline={true}>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport ColorBar from 'react-color-bar';\n \nclass Bar extends Component {\n    render() {\n        const data = [\n              {\n                  value: 100,\n                  color: '#6dc0fd',\n                  legendLabel: 'Less than 100',\n                  legendValue: \"<100\",\n                  tooltip: 'Data less than 100',\n              }, {\n                  value: 300,\n                  color: '#5b92fe',\n                  legendLabel: 'Between 100 and 300',\n                  legendValue: \"100 <= Data < 300\",\n                  tooltip: 'Data between 100 and 300',\n              }, {\n                  value: 500,\n                  color: '#6154cb',\n                  legendLabel: 'Between 300 and 500',\n                  legendValue: \"300 <= Data < 500\",\n                  tooltip: 'Data between 300 and 500',\n              }, {\n                value: 1000,\n                color: '#000099',\n                legendLabel: 'Above 500',\n                legendValue: \">500\",\n                tooltip: 'Data above 500',\n            },\n          ];\n          return (\n            <div>\n                <ColorBar title=\"Data Usage\" data={data} />\n            </div>\n        );\n    }\n}\n \nexport default Bar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bar from './Bar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Bar />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}